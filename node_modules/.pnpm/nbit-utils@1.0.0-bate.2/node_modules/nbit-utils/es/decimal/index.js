import Decimal from 'decimal.js';
/**
 * 将安全金额的字符串还原回原始数字字符串，方便和后续的 decimal 计算，一般配合 useSetSafeCurrency 方法使用
 * @param safeCurrency 安全金额的字符串
 * @returns 去除掉其他符号的数字字符串
 */

function getSafeCurrency(safeCurrency) {
  if (safeCurrency === '--' || !safeCurrency || !safeCurrency.trim()) {
    return '0';
  }

  if (typeof safeCurrency === 'string') {
    // eslint-disable-next-line no-useless-escape
    return safeCurrency.replace(/\,/g, '');
  }

  return safeCurrency;
}
/** 将值安全转换为 Decimal 数据 */


function getSafeDecimal(value) {
  if (!value) {
    return new Decimal(0);
  }

  if (typeof value === 'string') {
    return new Decimal(getSafeCurrency(value));
  } else {
    return new Decimal(value);
  }
}
/**
 * 将字符串数字或 NaN 转为安全数字
 * @param value 目标值
 * @param backup 托底值
 */


function useSafeNumber(value) {
  var backup = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return Number(value) || backup;
}

export { getSafeCurrency, getSafeDecimal, useSafeNumber };
