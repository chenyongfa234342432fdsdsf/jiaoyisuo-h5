interface ReturnThemeType {
  bgColor: string
  textColor: string
  brandColor: string
  upColor: string
  downColor: string
  upLightColor: string
  downLightColor: string
}

const getTheme = (): ReturnThemeType => {
  const bgColor = getComputedStyle(document.body).getPropertyValue('--card_bg_color_01')
  const textColor = getComputedStyle(document.body).getPropertyValue('--text_color_01')
  const brandColor = getComputedStyle(document.body)
    .getPropertyValue('--brand_color')
    .replace(/(^\s*)|(\s*$)/g, '')

  const upColor = getComputedStyle(document.body)
    .getPropertyValue('--buy_up_color')
    .replace(/(^\s*)|(\s*$)/g, '')
  const downColor = getComputedStyle(document.body)
    .getPropertyValue('--sell_down_color')
    .replace(/(^\s*)|(\s*$)/g, '')

  const upLightColor = getComputedStyle(document.body)
    .getPropertyValue('--buy_up_color_hover')
    .replace(/(^\s*)|(\s*$)/g, '')
  const downLightColor = getComputedStyle(document.body)
    .getPropertyValue('--sell_down_color_hover')
    .replace(/(^\s*)|(\s*$)/g, '')
  return {
    bgColor,
    textColor,
    brandColor,
    upColor,
    downColor,
    upLightColor,
    downLightColor,
  }
}

export { getTheme }
