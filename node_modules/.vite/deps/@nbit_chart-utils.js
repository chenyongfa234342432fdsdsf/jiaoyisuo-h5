import {
  require_dayjs_min
} from "./chunk-535TJEQM.js";
import {
  __commonJS,
  __toESM
} from "./chunk-62VDRKYJ.js";

// node_modules/.pnpm/dayjs@1.11.3/node_modules/dayjs/plugin/isBetween.js
var require_isBetween = __commonJS({
  "node_modules/.pnpm/dayjs@1.11.3/node_modules/dayjs/plugin/isBetween.js"(exports, module) {
    !function(e, i) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = i() : "function" == typeof define && define.amd ? define(i) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_isBetween = i();
    }(exports, function() {
      "use strict";
      return function(e, i, t) {
        i.prototype.isBetween = function(e2, i2, s, f) {
          var n = t(e2), o = t(i2), r = "(" === (f = f || "()")[0], u = ")" === f[1];
          return (r ? this.isAfter(n, s) : !this.isBefore(n, s)) && (u ? this.isBefore(o, s) : !this.isAfter(o, s)) || (r ? this.isBefore(n, s) : !this.isAfter(n, s)) && (u ? this.isAfter(o, s) : !this.isBefore(o, s));
        };
      };
    });
  }
});

// node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.49/node_modules/@nbit/chart-utils/es/const/index.js
var timeLocaleLanguageMap = {
  "zh-CN": {
    "\u57FA\u672C\u7248": "\u57FA\u672C\u7248",
    "\u6DF1\u5EA6\u56FE": "\u6DF1\u5EA6\u56FE",
    "\u66F4\u591A": "\u66F4\u591A",
    "1m": "1\u5206",
    "1time": "\u5206\u65F6",
    "1s": "1\u79D2",
    "3m": "3\u5206",
    "5m": "5\u5206",
    "15m": "15\u5206",
    "30m": "30\u5206",
    "1h": "1\u5C0F\u65F6",
    "2h": "2\u5C0F\u65F6",
    "4h": "4\u5C0F\u65F6",
    "6h": "6\u5C0F\u65F6",
    "8h": "8\u5C0F\u65F6",
    "12h": "12\u5C0F\u65F6",
    "1D": "1\u65E5",
    "3D": "3\u65E5",
    "5D": "5\u65E5",
    "1W": "1\u5468",
    "1M": "1\u6708",
    "3M": "3\u6708",
    "6M": "6\u6708",
    "1Y": "1\u5E74",
    "\u56FE\u8868\u8BBE\u7F6E": "\u56FE\u8868\u8BBE\u7F6E",
    "\u6307\u6807\u8BBE\u7F6E": "\u6307\u6807\u8BBE\u7F6E",
    "\u65F6\u95F4\u5468\u671F": "\u65F6\u95F4\u5468\u671F",
    "\u56FE\u8868\u9AD8\u5EA6": "\u56FE\u8868\u9AD8\u5EA6",
    "\u504F\u4F4E": "\u504F\u4F4E",
    "\u9ED8\u8BA4": "\u9ED8\u8BA4",
    "\u504F\u9AD8": "\u504F\u9AD8",
    "\u53D6\u6D88": "\u53D6\u6D88",
    "\u5C55\u793A\u5468\u671F": "\u5C55\u793A\u5468\u671F",
    "\u91CD\u7F6E": "\u91CD\u7F6E",
    "\u786E\u8BA4": "\u786E\u8BA4",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4",
    "\u4E3B\u56FE": "\u4E3B\u56FE",
    "\u526F\u56FE": "\u526F\u56FE",
    "\u65F6\u95F4": "\u65F6\u95F4",
    "\u5F00": "\u5F00",
    "\u9AD8": "\u9AD8",
    "\u4F4E": "\u4F4E",
    "\u6536": "\u6536",
    "\u6DA8\u8DCC\u5E45": "\u6DA8\u8DCC\u5E45",
    "\u632F\u5E45": "\u632F\u5E45",
    "\u91CF": "\u91CF",
    "\u989D": "\u989D",
    "\u6210\u4EA4": "\u6210\u4EA4",
    "\u7B14": "\u7B14",
    "\u5747\u4EF7": "\u5747\u4EF7",
    "\u4E70\u5165": "\u4E70\u5165",
    "\u4E70": "\u4E70",
    "\u4E70\u6DA8": "\u4E70\u6DA8",
    "\u4E70\u8DCC": "\u4E70\u8DCC",
    "\u4E70\u8D85\u6DA8": "\u4E70\u8D85\u6DA8",
    "\u4E70\u8D85\u8DCC": "\u4E70\u8D85\u8DCC",
    "\u4EF7\u5DEE": "\u4EF7\u5DEE",
    "\u67E5\u770B\u660E\u7EC6": "\u67E5\u770B\u660E\u7EC6",
    "\u5356\u51FA": "\u5356\u51FA",
    "\u5356": "\u5356",
    "\u6570\u91CF": "\u6570\u91CF",
    "\u4EF7\u683C": "\u4EF7\u683C",
    "\u624B\u7EED\u8D39": "\u624B\u7EED\u8D39",
    "\u8BA2\u5355\u8BE6\u60C5": "\u8BA2\u5355\u8BE6\u60C5",
    "\u4EF7\u5DEE\u5E45\u5EA6": "\u4EF7\u5DEE\u5E45\u5EA6",
    "\u59D4\u6258\u4EF7\u683C": "\u59D4\u6258\u4EF7\u683C",
    "\u7D2F\u8BA1\u6302\u5355": "\u7D2F\u8BA1\u6302\u5355"
  },
  "zh-HK": {
    "\u57FA\u672C\u7248": "\u57FA\u672C\u7248",
    "\u6DF1\u5EA6\u56FE": "\u6DF1\u5EA6\u5716",
    "\u66F4\u591A": "\u66F4\u591A",
    "1m": "1\u5206",
    "1s": "1\u79D2",
    "1time": "\u5206\u6642",
    "3m": "3\u5206",
    "5m": "5\u5206",
    "15m": "15\u5206",
    "30m": "30\u5206",
    "1h": "1\u5C0F\u6642",
    "2h": "2\u5C0F\u6642",
    "4h": "4\u5C0F\u6642",
    "6h": "6\u5C0F\u6642",
    "8h": "8\u5C0F\u6642",
    "12h": "12\u5C0F\u6642",
    "1D": "1\u65E5",
    "3D": "3\u65E5",
    "5D": "5\u65E5",
    "1W": "1\u5468",
    "1M": "1\u6708",
    "3M": "3\u6708",
    "6M": "6\u6708",
    "1Y": "1\u5E74",
    "\u56FE\u8868\u8BBE\u7F6E": "\u5716\u6A19\u8A2D\u7F6E",
    "\u6307\u6807\u8BBE\u7F6E": "\u6307\u6A19\u8A2D\u7F6E",
    "\u65F6\u95F4\u5468\u671F": "\u6642\u9593\u9031\u671F",
    "\u56FE\u8868\u9AD8\u5EA6": "\u5716\u8868\u9AD8\u5EA6",
    "\u504F\u4F4E": "\u504F\u4F4E",
    "\u9ED8\u8BA4": "\u9ED8\u8A8D",
    "\u504F\u9AD8": "\u504F\u9AD8",
    "\u53D6\u6D88": "\u53D6\u6D88",
    "\u5C55\u793A\u5468\u671F": "\u5C55\u793A\u9031\u671F",
    "\u91CD\u7F6E": "\u91CD\u7F6E",
    "\u786E\u8BA4": "\u78BA\u8A8D",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "\u5FC5\u9808\u9078\u64C7\u4E94\u500B\u6642\u9593",
    "\u4E3B\u56FE": "\u4E3B\u5716",
    "\u526F\u56FE": "\u526F\u5716",
    "\u65F6\u95F4": "\u6642\u9593",
    "\u5F00": "\u958B",
    "\u9AD8": "\u9AD8",
    "\u4F4E": "\u4F4E",
    "\u6536": "\u6536",
    "\u6DA8\u8DCC\u5E45": "\u6F32\u8DCC\u5E45",
    "\u632F\u5E45": "\u632F\u5E45",
    "\u91CF": "\u91CF",
    "\u989D": "\u984D",
    "\u6210\u4EA4": "\u6210\u4EA4",
    "\u7B14": "\u7B46",
    "\u5747\u4EF7": "\u5747\u50F9",
    "\u4E70\u5165": "\u8CB7\u5165",
    "\u4E70": "\u8CB7",
    "\u4E70\u6DA8": "\u8CB7\u6F32",
    "\u4E70\u8DCC": "\u8CB7\u8DCC",
    "\u4E70\u8D85\u6DA8": "\u8CB7\u8D85\u6F32",
    "\u4E70\u8D85\u8DCC": "\u8CB7\u8D85\u8DCC",
    "\u4EF7\u5DEE": "\u50F9\u5DEE",
    "\u67E5\u770B\u660E\u7EC6": "\u67E5\u770B\u660E\u7D30",
    "\u5356\u51FA": "\u8CE3\u51FA",
    "\u5356": "\u8CE3",
    "\u6570\u91CF": "\u6578\u91CF",
    "\u4EF7\u683C": "\u50F9\u683C",
    "\u624B\u7EED\u8D39": "\u624B\u7E8C\u8CBB",
    "\u8BA2\u5355\u8BE6\u60C5": "\u8A02\u55AE\u8A73\u60C5",
    "\u4EF7\u5DEE\u5E45\u5EA6": "\u50F9\u5DEE\u5E45\u5EA6",
    "\u59D4\u6258\u4EF7\u683C": "\u59D4\u8A17\u50F9\u683C",
    "\u7D2F\u8BA1\u6302\u5355": "\u7D2F\u8A08\u639B\u55AE"
  },
  "en-US": {
    "\u57FA\u672C\u7248": "Original",
    "\u6DF1\u5EA6\u56FE": "Depth",
    "\u66F4\u591A": "more",
    "1m": "1m",
    "1s": "1s",
    "1time": "Time",
    "3m": "3m",
    "5m": "5m",
    "15m": "15m",
    "30m": "30m",
    "1h": "1h",
    "2h": "2h",
    "4h": "4h",
    "6h": "6h",
    "8h": "8h",
    "12h": "12h",
    "1D": "1D",
    "3D": "3D",
    "5D": "5D",
    "1W": "1W",
    "1M": "1M",
    "3M": "3M",
    "6M": "6M",
    "1Y": "1Y",
    "\u56FE\u8868\u8BBE\u7F6E": "Chart Settings",
    "\u6307\u6807\u8BBE\u7F6E": "Indicator Setting",
    "\u65F6\u95F4\u5468\u671F": "Cycle time",
    "\u56FE\u8868\u9AD8\u5EA6": "Chart Height",
    "\u504F\u4F4E": "Low",
    "\u9ED8\u8BA4": "Default",
    "\u504F\u9AD8": "High",
    "\u53D6\u6D88": "Cancel",
    "\u5C55\u793A\u5468\u671F": "Exhibition cycle",
    "\u91CD\u7F6E": "Reset",
    "\u786E\u8BA4": "Confirm",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "Five times must be selected",
    "\u4E3B\u56FE": "Main drawing",
    "\u526F\u56FE": "Secondary drawing",
    "\u65F6\u95F4": "Time",
    "\u5F00": "Open",
    "\u9AD8": "High",
    "\u4F4E": "Low",
    "\u6536": "Close",
    "\u6DA8\u8DCC\u5E45": "Chg",
    "\u632F\u5E45": "Amplitude",
    "\u91CF": "Volume",
    "\u989D": "QuoteVolume",
    "\u6210\u4EA4": "Deal",
    "\u7B14": "Pen",
    "\u5747\u4EF7": "Average price",
    "\u4E70\u5165": "Buy",
    "\u4E70": "Buy",
    "\u4E70\u6DA8": "Buy Rise",
    "\u4E70\u8DCC": "Buy Fall",
    "\u4E70\u8D85\u6DA8": "Overpriced",
    "\u4E70\u8D85\u8DCC": "Oversold",
    "\u4EF7\u5DEE": "Spread",
    "\u67E5\u770B\u660E\u7EC6": "View details",
    "\u5356\u51FA": "Sell",
    "\u5356": "Sell",
    "\u6570\u91CF": "Count",
    "\u4EF7\u683C": "Price",
    "\u624B\u7EED\u8D39": "Service charge",
    "\u8BA2\u5355\u8BE6\u60C5": "Order details",
    "\u4EF7\u5DEE\u5E45\u5EA6": "Spread",
    "\u59D4\u6258\u4EF7\u683C": "Commission price",
    "\u7D2F\u8BA1\u6302\u5355": "Accumulated pending orders"
  },
  "en-ID": {
    "\u57FA\u672C\u7248": "Versi dasar",
    "\u6DF1\u5EA6\u56FE": "Peta kedalaman",
    "\u66F4\u591A": "Lagi",
    "1m": "1 poin",
    "1time": "Berbagi waktu",
    "1s": "1 detik",
    "3m": "3 poin",
    "5m": "5 poin",
    "15m": "15 tanda",
    "30m": "30 poin",
    "1h": "1 jam",
    "2h": "2 jam",
    "4h": "4 jam",
    "6h": "6 jam",
    "8h": "8 jam",
    "12h": "12 jam",
    "1D": "1 hari",
    "3D": "3 hari",
    "5D": "5 hari",
    "1W": "1 minggu",
    "1M": "Januari",
    "3M": "Berbaris",
    "6M": "Juni",
    "1Y": "1 tahun",
    "\u56FE\u8868\u8BBE\u7F6E": "Pengaturan grafik",
    "\u6307\u6807\u8BBE\u7F6E": "Pengaturan indikator",
    "\u65F6\u95F4\u5468\u671F": "Jangka waktu",
    "\u56FE\u8868\u9AD8\u5EA6": "tinggi grafik",
    "\u504F\u4F4E": "Di sisi rendah",
    "\u9ED8\u8BA4": "bawaan",
    "\u504F\u9AD8": "Di sisi yang tinggi",
    "\u53D6\u6D88": "Membatalkan",
    "\u5C55\u793A\u5468\u671F": "Siklus tampilan",
    "\u91CD\u7F6E": "mengatur ulang",
    "\u786E\u8BA4": "mengonfirmasi",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "Lima kali harus dipilih",
    "\u4E3B\u56FE": "Gambar utama",
    "\u526F\u56FE": "Sub-gambar",
    "\u65F6\u95F4": "waktu",
    "\u5F00": "membuka",
    "\u9AD8": "tinggi",
    "\u4F4E": "Rendah",
    "\u6536": "menerima",
    "\u6DA8\u8DCC\u5E45": "Perubahan kutipan",
    "\u632F\u5E45": "amplitudo",
    "\u91CF": "kuantitas",
    "\u989D": "Dahi",
    "\u6210\u4EA4": "membuat kesepakatan",
    "\u7B14": "Pena",
    "\u5747\u4EF7": "harga rata-rata",
    "\u4E70\u5165": "Membeli",
    "\u4E70": "pembelian",
    "\u4E70\u6DA8": "Memborong",
    "\u4E70\u8DCC": "Beli atau jual",
    "\u4E70\u8D85\u6DA8": "Beli terlalu mahal",
    "\u4E70\u8D85\u8DCC": "Beli berlebihan",
    "\u4EF7\u5DEE": "menyebar",
    "\u67E5\u770B\u660E\u7EC6": "Melihat rincian",
    "\u5356\u51FA": "menjual",
    "\u5356": "Menjual",
    "\u6570\u91CF": "kuantitas",
    "\u4EF7\u683C": "harga",
    "\u624B\u7EED\u8D39": "Biaya penanganan",
    "\u8BA2\u5355\u8BE6\u60C5": "Detail pesanan",
    "\u4EF7\u5DEE\u5E45\u5EA6": "menyebar",
    "\u59D4\u6258\u4EF7\u683C": "Harga komisi",
    "\u7D2F\u8BA1\u6302\u5355": "Akumulasi pesanan tertunda"
  },
  "hi-IN": {
    "\u57FA\u672C\u7248": "\u092E\u0942\u0932 \u0938\u0902\u0938\u094D\u0915\u0930\u0923",
    "\u6DF1\u5EA6\u56FE": "\u0917\u0939\u0930\u093E\u0908 \u0915\u093E \u0928\u0915\u094D\u0936\u093E",
    "\u66F4\u591A": "\u0905\u0927\u093F\u0915",
    "1m": "1 \u0905\u0902\u0915",
    "1time": "\u0938\u092E\u092F \u092C\u0924\u093E\u0928\u093E",
    "1s": "1 \u0938\u0947\u0915\u0902\u0921",
    "3m": "3 \u0905\u0902\u0915",
    "5m": "5 \u0905\u0902\u0915",
    "15m": "15 \u0905\u0902\u0915",
    "30m": "30 \u0905\u0902\u0915",
    "1h": "1 \u0918\u0902\u091F\u093E",
    "2h": "2 \u0918\u0902\u091F\u0947",
    "4h": "\u091A\u093E\u0930 \u0918\u0902\u091F\u0947",
    "6h": "6 \u0918\u0902\u091F\u0947",
    "8h": "8 \u0918\u0902\u091F\u0947",
    "12h": "12 \u0918\u0902\u091F\u0947",
    "1D": "1 \u0926\u093F\u0928",
    "3D": "3 \u0926\u093F\u0928",
    "5D": "\u092A\u093E\u0902\u091A \u0926\u093F\u0928",
    "1W": "1 \u0938\u092A\u094D\u0924\u093E\u0939",
    "1M": "\u091C\u0928\u0935\u0930\u0940",
    "3M": "\u092E\u093E\u0930\u094D\u091A",
    "6M": "\u091C\u0942\u0928",
    "1Y": "1 \u0935\u0930\u094D\u0937",
    "\u56FE\u8868\u8BBE\u7F6E": "\u091A\u093E\u0930\u094D\u091F \u0938\u0947\u091F\u093F\u0902\u0917",
    "\u6307\u6807\u8BBE\u7F6E": "\u0938\u0902\u0915\u0947\u0924\u0915 \u0938\u0947\u091F\u093F\u0902\u0917\u094D\u0938",
    "\u65F6\u95F4\u5468\u671F": "\u0938\u092E\u092F \u0938\u0940\u092E\u093E",
    "\u56FE\u8868\u9AD8\u5EA6": "\u091A\u093E\u0930\u094D\u091F \u0915\u0940 \u090A\u0902\u091A\u093E\u0908",
    "\u504F\u4F4E": "\u0928\u093F\u091A\u0932\u0947 \u0938\u094D\u0924\u0930 \u092A\u0930",
    "\u9ED8\u8BA4": "\u0917\u0932\u0924\u0940 \u0915\u0930\u0928\u093E",
    "\u504F\u9AD8": "\u090A\u0901\u091A\u0947 \u092A\u0915\u094D\u0937 \u092A\u0930",
    "\u53D6\u6D88": "\u0930\u0926\u094D\u0926 \u0915\u0930\u0928\u093E",
    "\u5C55\u793A\u5468\u671F": "\u092A\u094D\u0930\u0926\u0930\u094D\u0936\u0928 \u091A\u0915\u094D\u0930",
    "\u91CD\u7F6E": "\u0930\u0940\u0938\u0947\u091F",
    "\u786E\u8BA4": "\u092A\u0941\u0937\u094D\u091F\u093F \u0915\u0930\u0928\u093E",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "\u092A\u093E\u0902\u091A \u092C\u093E\u0930 \u0915\u093E \u091A\u092F\u0928 \u0915\u0930\u0928\u093E \u0939\u094B\u0917\u093E",
    "\u4E3B\u56FE": "\u092E\u0941\u0916\u094D\u092F \u091A\u093F\u0924\u094D\u0930",
    "\u526F\u56FE": "\u0909\u092A\u091A\u093F\u0924\u094D\u0930",
    "\u65F6\u95F4": "\u0938\u092E\u092F",
    "\u5F00": "\u0916\u0941\u0932\u093E",
    "\u9AD8": "\u0909\u091A\u094D\u091A",
    "\u4F4E": "\u0915\u092E",
    "\u6536": "\u092A\u094D\u0930\u093E\u092A\u094D\u0924 \u0915\u0930\u0947\u0902",
    "\u6DA8\u8DCC\u5E45": "\u092D\u093E\u0935 \u092A\u0930\u093F\u0935\u0930\u094D\u0924\u0928",
    "\u632F\u5E45": "\u0906\u092F\u093E\u092E",
    "\u91CF": "\u092E\u093E\u0924\u094D\u0930\u093E",
    "\u989D": "\u092E\u093E\u0925\u093E",
    "\u6210\u4EA4": "\u090F\u0915 \u0938\u094C\u0926\u093E \u0915\u0930\u0924\u0947 \u0939\u0948\u0902",
    "\u7B14": "\u0915\u0932\u092E",
    "\u5747\u4EF7": "\u0914\u0938\u0924 \u092E\u0942\u0932\u094D\u092F",
    "\u4E70\u5165": "\u0916\u0930\u0940\u0926\u0928\u093E",
    "\u4E70": "\u0916\u0930\u0940\u0926\u0928\u093E",
    "\u4E70\u6DA8": "\u092E\u094B\u0932 \u0932\u0947\u0928\u093E",
    "\u4E70\u8DCC": "\u0916\u0930\u0940\u0926\u0947\u0902 \u092F\u093E \u092C\u0947\u091A\u0947\u0902",
    "\u4E70\u8D85\u6DA8": "\u0905\u0927\u093F\u0915 \u0915\u0940\u092E\u0924 \u092A\u0930 \u0916\u0930\u0940\u0926\u0947\u0902",
    "\u4E70\u8D85\u8DCC": "\u0913\u0935\u0930\u0938\u094B\u0932\u094D\u0921 \u0916\u0930\u0940\u0926\u0947\u0902",
    "\u4EF7\u5DEE": "\u092B\u0948\u0932\u093E\u0928\u093E",
    "\u67E5\u770B\u660E\u7EC6": "\u0935\u093F\u0935\u0930\u0923 \u0926\u0947\u0916\u0947\u0902",
    "\u5356\u51FA": "\u092C\u0947\u091A\u0928\u093E",
    "\u5356": "\u092C\u0947\u091A\u0928\u093E",
    "\u6570\u91CF": "\u092E\u093E\u0924\u094D\u0930\u093E",
    "\u4EF7\u683C": "\u0915\u0940\u092E\u0924",
    "\u624B\u7EED\u8D39": "\u0938\u0902\u091A\u093E\u0932\u0928 \u0936\u0941\u0932\u094D\u0915",
    "\u8BA2\u5355\u8BE6\u60C5": "\u0911\u0930\u094D\u0921\u0930 \u0915\u093E \u0935\u093F\u0935\u0930\u0923",
    "\u4EF7\u5DEE\u5E45\u5EA6": "\u092B\u0948\u0932\u093E\u0928\u093E",
    "\u59D4\u6258\u4EF7\u683C": "\u0915\u092E\u0940\u0936\u0928 \u092E\u0942\u0932\u094D\u092F",
    "\u7D2F\u8BA1\u6302\u5355": "\u0932\u0902\u092C\u093F\u0924 \u0906\u0926\u0947\u0936 \u0938\u0902\u091A\u093F\u0924"
  },
  "ja-JP": {
    "\u57FA\u672C\u7248": "\u57FA\u672C\u30D0\u30FC\u30B8\u30E7\u30F3",
    "\u6DF1\u5EA6\u56FE": "\u6DF1\u5EA6\u30DE\u30C3\u30D7",
    "\u66F4\u591A": "\u3082\u3063\u3068",
    "1m": "1\u70B9",
    "1time": "\u6642\u9593\u3092\u5171\u6709\u3059\u308B",
    "1s": "1\u79D2",
    "3m": "3\u70B9",
    "5m": "5\u70B9",
    "15m": "15\u70B9",
    "30m": "30\u70B9",
    "1h": "1\u6642\u9593",
    "2h": "2\u6642\u9593",
    "4h": "4\u6642\u9593",
    "6h": "6\u6642\u9593",
    "8h": "8\u6642\u9593",
    "12h": "12\u6642\u9593",
    "1D": "1\xA0\u65E5",
    "3D": "3\xA0\u65E5",
    "5D": "5\xA0\u65E5",
    "1W": "1\u9031\u9593",
    "1M": "1\u6708",
    "3M": "\u884C\u9032",
    "6M": "\u516D\u6708",
    "1Y": "1\u5E74",
    "\u56FE\u8868\u8BBE\u7F6E": "\u30C1\u30E3\u30FC\u30C8\u8A2D\u5B9A",
    "\u6307\u6807\u8BBE\u7F6E": "\u30A4\u30F3\u30B8\u30B1\u30FC\u30BF\u30FC\u306E\u8A2D\u5B9A",
    "\u65F6\u95F4\u5468\u671F": "\u671F\u9593",
    "\u56FE\u8868\u9AD8\u5EA6": "\u30C1\u30E3\u30FC\u30C8\u306E\u9AD8\u3055",
    "\u504F\u4F4E": "\u4F4E\u3044\u5074",
    "\u9ED8\u8BA4": "\u30C7\u30D5\u30A9\u30EB\u30C8",
    "\u504F\u9AD8": "\u30CF\u30A4\u30B5\u30A4\u30C9",
    "\u53D6\u6D88": "\u30AD\u30E3\u30F3\u30BB\u30EB",
    "\u5C55\u793A\u5468\u671F": "\u8868\u793A\u5468\u671F",
    "\u91CD\u7F6E": "\u30EA\u30BB\u30C3\u30C8",
    "\u786E\u8BA4": "\u78BA\u8A8D\u3059\u308B",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "5 \u56DE\u3092\u9078\u629E\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059",
    "\u4E3B\u56FE": "\u30E1\u30A4\u30F3\u753B\u50CF",
    "\u526F\u56FE": "\u30B5\u30D6\u30D4\u30AF\u30C1\u30E3\u30FC",
    "\u65F6\u95F4": "\u6642\u9593",
    "\u5F00": "\u958B\u3051\u308B",
    "\u9AD8": "\u9AD8\u3044",
    "\u4F4E": "\u4F4E\u3044",
    "\u6536": "\u53D7\u3051\u53D6\u308B",
    "\u6DA8\u8DCC\u5E45": "\u898B\u7A4D\u5909\u66F4",
    "\u632F\u5E45": "\u632F\u5E45",
    "\u91CF": "\u91CF",
    "\u989D": "\u984D",
    "\u6210\u4EA4": "\u53D6\u5F15\u3092\u3059\u308B",
    "\u7B14": "\u30DA\u30F3",
    "\u5747\u4EF7": "\u5E73\u5747\u306E\u5024\u6BB5",
    "\u4E70\u5165": "\u8CB7\u3046",
    "\u4E70": "\u8CFC\u5165",
    "\u4E70\u6DA8": "\u8CB7\u3044\u5360\u3081\u307E\u3059",
    "\u4E70\u8DCC": "\u8CB7\u3046\u304B\u58F2\u308B\u304B",
    "\u4E70\u8D85\u6DA8": "\u9AD8\u4FA1\u306A\u3082\u306E\u3092\u8CB7\u3046",
    "\u4E70\u8D85\u8DCC": "\u58F2\u3089\u308C\u904E\u304E\u3092\u8CB7\u3046",
    "\u4EF7\u5DEE": "\u5E83\u3081\u308B",
    "\u67E5\u770B\u660E\u7EC6": "\u8A73\u7D30\u3092\u898B\u308B",
    "\u5356\u51FA": "\u58F2\u308B",
    "\u5356": "\u58F2\u308B",
    "\u6570\u91CF": "\u91CF",
    "\u4EF7\u683C": "\u4FA1\u683C",
    "\u624B\u7EED\u8D39": "\u624B\u6570\u6599",
    "\u8BA2\u5355\u8BE6\u60C5": "\u6CE8\u6587\u8A73\u7D30",
    "\u4EF7\u5DEE\u5E45\u5EA6": "\u5E83\u3081\u308B",
    "\u59D4\u6258\u4EF7\u683C": "\u624B\u6570\u6599\u4FA1\u683C",
    "\u7D2F\u8BA1\u6302\u5355": "\u7D2F\u7A4D\u672A\u6C7A\u6CE8\u6587\u6570"
  },
  "ko-KR": {
    "\u57FA\u672C\u7248": "\uAE30\uBCF8 \uBC84\uC804",
    "\u6DF1\u5EA6\u56FE": "\uAE4A\uC774 \uC9C0\uB3C4",
    "\u66F4\u591A": "\uB354",
    "1m": "1\uC810",
    "1time": "\uC2DC\uAC04 \uACF5\uC720",
    "1s": "1 \uCD08",
    "3m": "3\uC810",
    "5m": "5\uC810",
    "15m": "15\uC810",
    "30m": "30\uC810",
    "1h": "1 \uC2DC\uAC04",
    "2h": "2\uC2DC\uAC04",
    "4h": "4 \uC2DC\uAC04",
    "6h": "6 \uC2DC\uAC04",
    "8h": "8 \uC2DC\uAC04",
    "12h": "12 \uC2DC\uAC04",
    "1D": "1\xA0\uC77C",
    "3D": "3\xA0\uC77C",
    "5D": "5\xA0\uC77C",
    "1W": "\uC77C\uC8FC",
    "1M": "1\uC6D4",
    "3M": "3\uC6D4",
    "6M": "6\uC6D4",
    "1Y": "\uC77C\uB144",
    "\u56FE\u8868\u8BBE\u7F6E": "\uCC28\uD2B8 \uC124\uC815",
    "\u6307\u6807\u8BBE\u7F6E": "\uC9C0\uD45C \uC124\uC815",
    "\u65F6\u95F4\u5468\u671F": "\uAE30\uAC04",
    "\u56FE\u8868\u9AD8\u5EA6": "\uCC28\uD2B8 \uB192\uC774",
    "\u504F\u4F4E": "\uB0AE\uC740\uCABD\uC5D0",
    "\u9ED8\u8BA4": "\uAE30\uBCF8",
    "\u504F\u9AD8": "\uB192\uC740\uCABD\uC5D0",
    "\u53D6\u6D88": "\uCDE8\uC18C",
    "\u5C55\u793A\u5468\u671F": "\uD45C\uC2DC\uC8FC\uAE30",
    "\u91CD\u7F6E": "\uCD08\uAE30\uD654",
    "\u786E\u8BA4": "\uD655\uC778\uD558\uB2E4",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "5\uBC88\uC744 \uC120\uD0DD\uD574\uC57C \uD569\uB2C8\uB2E4.",
    "\u4E3B\u56FE": "\uBA54\uC778 \uC0AC\uC9C4",
    "\u526F\u56FE": "\uD558\uC704 \uC0AC\uC9C4",
    "\u65F6\u95F4": "\uC2DC\uAC04",
    "\u5F00": "\uC5F4\uB824 \uC788\uB294",
    "\u9AD8": "\uB192\uC740",
    "\u4F4E": "\uB0AE\uC740",
    "\u6536": "\uBC1B\uB2E4",
    "\u6DA8\u8DCC\u5E45": "\uACAC\uC801 \uBCC0\uACBD",
    "\u632F\u5E45": "\uC9C4\uD3ED",
    "\u91CF": "\uC218\uB7C9",
    "\u989D": "\uC774\uB9C8",
    "\u6210\u4EA4": "\uAC70\uB798\uB97C\uD558\uB2E4",
    "\u7B14": "\uD39C",
    "\u5747\u4EF7": "\uD3C9\uADE0 \uAC00\uACA9",
    "\u4E70\u5165": "\uAD6C\uC785\uD558\uB2E4",
    "\u4E70": "\uAD6C\uC785",
    "\u4E70\u6DA8": "\uAD6C\uB9E4",
    "\u4E70\u8DCC": "\uAD6C\uB9E4 \uB610\uB294 \uD310\uB9E4",
    "\u4E70\u8D85\u6DA8": "\uACE0\uAC00\uB85C \uAD6C\uB9E4",
    "\u4E70\u8D85\u8DCC": "\uACFC\uB9E4\uB3C4 \uB9E4\uC218",
    "\u4EF7\u5DEE": "\uD655\uC0B0",
    "\u67E5\u770B\u660E\u7EC6": "\uC138\uBD80 \uC815\uBCF4\uBCF4\uAE30",
    "\u5356\u51FA": "\uD314\uB2E4",
    "\u5356": "\uD314\uB2E4",
    "\u6570\u91CF": "\uC218\uB7C9",
    "\u4EF7\u683C": "\uAC00\uACA9",
    "\u624B\u7EED\u8D39": "\uC218\uC218\uB8CC",
    "\u8BA2\u5355\u8BE6\u60C5": "\uC8FC\uBB38 \uC138\uBD80\uC815\uBCF4",
    "\u4EF7\u5DEE\u5E45\u5EA6": "\uD655\uC0B0",
    "\u59D4\u6258\u4EF7\u683C": "\uC218\uC218\uB8CC \uAC00\uACA9",
    "\u7D2F\u8BA1\u6302\u5355": "\uB204\uC801 \uB300\uAE30 \uC8FC\uBB38"
  },
  "pt-BR": {
    "\u57FA\u672C\u7248": "Vers\xE3o b\xE1sica",
    "\u6DF1\u5EA6\u56FE": "Mapa de profundidade",
    "\u66F4\u591A": "Mais",
    "1m": "1 ponto",
    "1time": "compartilhamento de tempo",
    "1s": "1 segundo",
    "3m": "3 pontos",
    "5m": "5 pontos",
    "15m": "15 marcas",
    "30m": "30 pontos",
    "1h": "1 hora",
    "2h": "2 horas",
    "4h": "4 horas",
    "6h": "6 horas",
    "8h": "8 horas",
    "12h": "12 horas",
    "1D": "1 dia",
    "3D": "3 dias",
    "5D": "5 dias",
    "1W": "1 semana",
    "1M": "Janeiro",
    "3M": "Marchar",
    "6M": "Junho",
    "1Y": "1 ano",
    "\u56FE\u8868\u8BBE\u7F6E": "Configura\xE7\xF5es do gr\xE1fico",
    "\u6307\u6807\u8BBE\u7F6E": "Configura\xE7\xF5es do indicador",
    "\u65F6\u95F4\u5468\u671F": "Per\xEDodo de tempo",
    "\u56FE\u8868\u9AD8\u5EA6": "altura do gr\xE1fico",
    "\u504F\u4F4E": "No lado baixo",
    "\u9ED8\u8BA4": "padr\xE3o",
    "\u504F\u9AD8": "No lado alto",
    "\u53D6\u6D88": "Cancelar",
    "\u5C55\u793A\u5468\u671F": "Ciclo de exibi\xE7\xE3o",
    "\u91CD\u7F6E": "reiniciar",
    "\u786E\u8BA4": "confirme",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "Cinco vezes devem ser selecionadas",
    "\u4E3B\u56FE": "Imagem principal",
    "\u526F\u56FE": "Subimagem",
    "\u65F6\u95F4": "tempo",
    "\u5F00": "abrir",
    "\u9AD8": "alto",
    "\u4F4E": "Baixo",
    "\u6536": "receber",
    "\u6DA8\u8DCC\u5E45": "Altera\xE7\xE3o de cota\xE7\xE3o",
    "\u632F\u5E45": "amplitude",
    "\u91CF": "quantidade",
    "\u989D": "Testa",
    "\u6210\u4EA4": "fazer um acordo",
    "\u7B14": "Caneta",
    "\u5747\u4EF7": "pre\xE7o m\xE9dio",
    "\u4E70\u5165": "Comprar",
    "\u4E70": "comprar",
    "\u4E70\u6DA8": "Comprar",
    "\u4E70\u8DCC": "Comprar ou vender",
    "\u4E70\u8D85\u6DA8": "Compre caro",
    "\u4E70\u8D85\u8DCC": "Comprar sobrevendido",
    "\u4EF7\u5DEE": "espalhar",
    "\u67E5\u770B\u660E\u7EC6": "Ver detalhes",
    "\u5356\u51FA": "vender",
    "\u5356": "Vender",
    "\u6570\u91CF": "quantidade",
    "\u4EF7\u683C": "pre\xE7o",
    "\u624B\u7EED\u8D39": "taxa de manuseio",
    "\u8BA2\u5355\u8BE6\u60C5": "detalhes do pedido",
    "\u4EF7\u5DEE\u5E45\u5EA6": "espalhar",
    "\u59D4\u6258\u4EF7\u683C": "Pre\xE7o de comiss\xE3o",
    "\u7D2F\u8BA1\u6302\u5355": "Pedidos pendentes acumulados"
  },
  "ta-IN": {
    "\u57FA\u672C\u7248": "\u0B85\u0B9F\u0BBF\u0BAA\u0BCD\u0BAA\u0B9F\u0BC8 \u0BAA\u0BA4\u0BBF\u0BAA\u0BCD\u0BAA\u0BC1",
    "\u6DF1\u5EA6\u56FE": "\u0B86\u0BB4 \u0BB5\u0BB0\u0BC8\u0BAA\u0B9F\u0BAE\u0BCD",
    "\u66F4\u591A": "\u0BAE\u0BC7\u0BB2\u0BC1\u0BAE\u0BCD",
    "1m": "1 \u0BAA\u0BC1\u0BB3\u0BCD\u0BB3\u0BBF",
    "1time": "\u0BA8\u0BC7\u0BB0\u0BAE\u0BCD \u0BAA\u0B95\u0BBF\u0BB0\u0BCD\u0BB5\u0BC1",
    "1s": "1 \u0BB5\u0BBF\u0BA9\u0BBE\u0B9F\u0BBF",
    "3m": "3 \u0BAA\u0BC1\u0BB3\u0BCD\u0BB3\u0BBF\u0B95\u0BB3\u0BCD",
    "5m": "5 \u0BAA\u0BC1\u0BB3\u0BCD\u0BB3\u0BBF\u0B95\u0BB3\u0BCD",
    "15m": "15 \u0BAE\u0BA4\u0BBF\u0BAA\u0BCD\u0BAA\u0BC6\u0BA3\u0BCD\u0B95\u0BB3\u0BCD",
    "30m": "30 \u0BAA\u0BC1\u0BB3\u0BCD\u0BB3\u0BBF\u0B95\u0BB3\u0BCD",
    "1h": "1 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD",
    "2h": "2 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD",
    "4h": "4 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD",
    "6h": "6 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD",
    "8h": "8 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD",
    "12h": "12 \u0BAE\u0BA3\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD",
    "1D": "1 \u0BA8\u0BBE\u0BB3\u0BCD",
    "3D": "3 \u0BA8\u0BBE\u0B9F\u0BCD\u0B95\u0BB3\u0BCD",
    "5D": "5 \u0BA8\u0BBE\u0B9F\u0BCD\u0B95\u0BB3\u0BCD",
    "1W": "1 \u0BB5\u0BBE\u0BB0\u0BAE\u0BCD",
    "1M": "\u0B9C\u0BA9\u0BB5\u0BB0\u0BBF",
    "3M": "\u0BAE\u0BBE\u0BB0\u0BCD\u0B9A\u0BCD",
    "6M": "\u0B9C\u0BC2\u0BA9\u0BCD",
    "1Y": "1 \u0B86\u0BA3\u0BCD\u0B9F\u0BC1",
    "\u56FE\u8868\u8BBE\u7F6E": "\u0BB5\u0BBF\u0BB3\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F \u0B85\u0BAE\u0BC8\u0BAA\u0BCD\u0BAA\u0BC1\u0B95\u0BB3\u0BCD",
    "\u6307\u6807\u8BBE\u7F6E": "\u0B95\u0BBE\u0B9F\u0BCD\u0B9F\u0BBF \u0B85\u0BAE\u0BC8\u0BAA\u0BCD\u0BAA\u0BC1\u0B95\u0BB3\u0BCD",
    "\u65F6\u95F4\u5468\u671F": "\u0B95\u0BBE\u0BB2 \u0B95\u0B9F\u0BCD\u0B9F\u0BAE\u0BCD",
    "\u56FE\u8868\u9AD8\u5EA6": "\u0BB5\u0BBF\u0BB3\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BAE\u0BCD \u0B89\u0BAF\u0BB0\u0BAE\u0BCD",
    "\u504F\u4F4E": "\u0BA4\u0BBE\u0BB4\u0BCD\u0BB5\u0BBE\u0BA9 \u0BAA\u0B95\u0BCD\u0B95\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD",
    "\u9ED8\u8BA4": "\u0B87\u0BAF\u0BB2\u0BCD\u0BAA\u0BC1\u0BA8\u0BBF\u0BB2\u0BC8",
    "\u504F\u9AD8": "\u0B89\u0BAF\u0BB0\u0BAE\u0BBE\u0BA9 \u0BAA\u0B95\u0BCD\u0B95\u0BA4\u0BCD\u0BA4\u0BBF\u0BB2\u0BCD",
    "\u53D6\u6D88": "\u0BB0\u0BA4\u0BCD\u0BA4\u0BC1 \u0B9A\u0BC6\u0BAF\u0BCD",
    "\u5C55\u793A\u5468\u671F": "\u0B95\u0BBE\u0B9F\u0BCD\u0B9A\u0BBF \u0B9A\u0BC1\u0BB4\u0BB1\u0BCD\u0B9A\u0BBF",
    "\u91CD\u7F6E": "\u0BAE\u0BC0\u0B9F\u0BCD\u0B9F\u0BAE\u0BC8",
    "\u786E\u8BA4": "\u0B89\u0BB1\u0BC1\u0BA4\u0BBF",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "\u0B90\u0BA8\u0BCD\u0BA4\u0BC1 \u0BAE\u0BC1\u0BB1\u0BC8 \u0BA4\u0BC7\u0BB0\u0BCD\u0BA8\u0BCD\u0BA4\u0BC6\u0B9F\u0BC1\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD",
    "\u4E3B\u56FE": "\u0BAE\u0BC1\u0B95\u0BCD\u0B95\u0BBF\u0BAF \u0BAA\u0B9F\u0BAE\u0BCD",
    "\u526F\u56FE": "\u0BA4\u0BC1\u0BA3\u0BC8\u0BAA\u0BCD \u0BAA\u0B9F\u0BAE\u0BCD",
    "\u65F6\u95F4": "\u0BA8\u0BC7\u0BB0\u0BAE\u0BCD",
    "\u5F00": "\u0BA4\u0BBF\u0BB1\u0BA8\u0BCD\u0BA4",
    "\u9AD8": "\u0B89\u0BAF\u0BB0\u0BCD",
    "\u4F4E": "\u0B95\u0BC1\u0BB1\u0BC8\u0BA8\u0BCD\u0BA4",
    "\u6536": "\u0BAA\u0BC6\u0BB1\u0BC1\u0BAE\u0BCD",
    "\u6DA8\u8DCC\u5E45": "\u0BAE\u0BC7\u0BB1\u0BCD\u0B95\u0BCB\u0BB3\u0BCD \u0BAE\u0BBE\u0BB1\u0BCD\u0BB1\u0BAE\u0BCD",
    "\u632F\u5E45": "\u0BB5\u0BC0\u0B9A\u0BCD\u0B9A\u0BC1",
    "\u91CF": "\u0B85\u0BB3\u0BB5\u0BC1",
    "\u989D": "\u0BA8\u0BC6\u0BB1\u0BCD\u0BB1\u0BBF",
    "\u6210\u4EA4": "\u0B92\u0BB0\u0BC1 \u0B92\u0BAA\u0BCD\u0BAA\u0BA8\u0BCD\u0BA4\u0BAE\u0BCD \u0B9A\u0BC6\u0BAF\u0BCD",
    "\u7B14": "\u0BAA\u0BC7\u0BA9\u0BBE",
    "\u5747\u4EF7": "\u0B9A\u0BB0\u0BBE\u0B9A\u0BB0\u0BBF \u0BB5\u0BBF\u0BB2\u0BC8",
    "\u4E70\u5165": "\u0BB5\u0BBE\u0B99\u0BCD\u0B95",
    "\u4E70": "\u0B95\u0BCA\u0BB3\u0BCD\u0BAE\u0BC1\u0BA4\u0BB2\u0BCD",
    "\u4E70\u6DA8": "\u0BB5\u0BB0\u0BC8 \u0BB5\u0BBE\u0B99\u0BCD\u0B95",
    "\u4E70\u8DCC": "\u0BB5\u0BBE\u0B99\u0BCD\u0B95 \u0B85\u0BB2\u0BCD\u0BB2\u0BA4\u0BC1 \u0BB5\u0BBF\u0BB1\u0BCD\u0B95",
    "\u4E70\u8D85\u6DA8": "\u0B85\u0BA4\u0BBF\u0B95 \u0BB5\u0BBF\u0BB2\u0BC8\u0B95\u0BCD\u0B95\u0BC1 \u0BB5\u0BBE\u0B99\u0BCD\u0B95\u0BB5\u0BC1\u0BAE\u0BCD",
    "\u4E70\u8D85\u8DCC": "\u0B85\u0BA4\u0BBF\u0B95\u0BAE\u0BBE\u0B95 \u0BB5\u0BBF\u0BB1\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BC1\u0B95\u0BBF\u0BB1\u0BA4\u0BC1",
    "\u4EF7\u5DEE": "\u0BAA\u0BB0\u0BB5\u0BC1\u0BA4\u0BB2\u0BCD",
    "\u67E5\u770B\u660E\u7EC6": "\u0BB5\u0BBF\u0BAA\u0BB0\u0B99\u0BCD\u0B95\u0BB3\u0BC8 \u0BAA\u0BBE\u0BB0\u0BCD",
    "\u5356\u51FA": "\u0BB5\u0BBF\u0BB1\u0BCD\u0B95",
    "\u5356": "\u0BB5\u0BBF\u0BB1\u0BCD\u0B95",
    "\u6570\u91CF": "\u0B85\u0BB3\u0BB5\u0BC1",
    "\u4EF7\u683C": "\u0BB5\u0BBF\u0BB2\u0BC8",
    "\u624B\u7EED\u8D39": "\u0B95\u0BC8\u0BAF\u0BBE\u0BB3\u0BC1\u0BA4\u0BB2\u0BCD \u0B95\u0B9F\u0BCD\u0B9F\u0BA3\u0BAE\u0BCD",
    "\u8BA2\u5355\u8BE6\u60C5": "\u0B86\u0BA3\u0BC8 \u0BB5\u0BBF\u0BB5\u0BB0\u0B99\u0BCD\u0B95\u0BB3\u0BCD",
    "\u4EF7\u5DEE\u5E45\u5EA6": "\u0BAA\u0BB0\u0BB5\u0BC1\u0BA4\u0BB2\u0BCD",
    "\u59D4\u6258\u4EF7\u683C": "\u0B95\u0BAE\u0BBF\u0BB7\u0BA9\u0BCD \u0BB5\u0BBF\u0BB2\u0BC8",
    "\u7D2F\u8BA1\u6302\u5355": "\u0BA8\u0BBF\u0BB2\u0BC1\u0BB5\u0BC8\u0BAF\u0BBF\u0BB2\u0BCD \u0B89\u0BB3\u0BCD\u0BB3 \u0B86\u0BB0\u0BCD\u0B9F\u0BB0\u0BCD\u0B95\u0BB3\u0BCD \u0B95\u0BC1\u0BB5\u0BBF\u0BA8\u0BCD\u0BA4\u0BA9"
  },
  "th-TH": {
    "\u57FA\u672C\u7248": "\u0E23\u0E38\u0E48\u0E19\u0E1E\u0E37\u0E49\u0E19\u0E10\u0E32\u0E19",
    "\u6DF1\u5EA6\u56FE": "\u0E41\u0E1C\u0E19\u0E17\u0E35\u0E48\u0E04\u0E27\u0E32\u0E21\u0E25\u0E36\u0E01",
    "\u66F4\u591A": "\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32",
    "1m": "1 \u0E04\u0E30\u0E41\u0E19\u0E19",
    "1time": "\u0E01\u0E32\u0E23\u0E41\u0E1A\u0E48\u0E07\u0E1B\u0E31\u0E19\u0E40\u0E27\u0E25\u0E32",
    "1s": "1 \u0E27\u0E34\u0E19\u0E32\u0E17\u0E35",
    "3m": "3 \u0E04\u0E30\u0E41\u0E19\u0E19",
    "5m": "5 \u0E04\u0E30\u0E41\u0E19\u0E19",
    "15m": "15 \u0E04\u0E30\u0E41\u0E19\u0E19",
    "30m": "30 \u0E04\u0E30\u0E41\u0E19\u0E19",
    "1h": "1 \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07",
    "2h": "2 \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07",
    "4h": "4 \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07",
    "6h": "6 \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07",
    "8h": "8 \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07",
    "12h": "12 \u0E0A\u0E31\u0E48\u0E27\u0E42\u0E21\u0E07",
    "1D": "1 \u0E27\u0E31\u0E19",
    "3D": "3 \u0E27\u0E31\u0E19",
    "5D": "5 \u0E27\u0E31\u0E19",
    "1W": "1 \u0E2A\u0E31\u0E1B\u0E14\u0E32\u0E2B\u0E4C",
    "1M": "\u0E21\u0E01\u0E23\u0E32\u0E04\u0E21",
    "3M": "\u0E21\u0E35\u0E19\u0E32\u0E04\u0E21",
    "6M": "\u0E21\u0E34\u0E16\u0E38\u0E19\u0E32\u0E22\u0E19",
    "1Y": "1 \u0E1B\u0E35",
    "\u56FE\u8868\u8BBE\u7F6E": "\u0E01\u0E32\u0E23\u0E15\u0E31\u0E49\u0E07\u0E04\u0E48\u0E32\u0E41\u0E1C\u0E19\u0E20\u0E39\u0E21\u0E34",
    "\u6307\u6807\u8BBE\u7F6E": "\u0E01\u0E32\u0E23\u0E15\u0E31\u0E49\u0E07\u0E04\u0E48\u0E32\u0E15\u0E31\u0E27\u0E1A\u0E48\u0E07\u0E0A\u0E35\u0E49",
    "\u65F6\u95F4\u5468\u671F": "\u0E0A\u0E48\u0E27\u0E07\u0E40\u0E27\u0E25\u0E32",
    "\u56FE\u8868\u9AD8\u5EA6": "\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E39\u0E07\u0E02\u0E2D\u0E07\u0E41\u0E1C\u0E19\u0E20\u0E39\u0E21\u0E34",
    "\u504F\u4F4E": "\u0E43\u0E19\u0E14\u0E49\u0E32\u0E19\u0E15\u0E48\u0E33",
    "\u9ED8\u8BA4": "\u0E04\u0E48\u0E32\u0E40\u0E23\u0E34\u0E48\u0E21\u0E15\u0E49\u0E19",
    "\u504F\u9AD8": "\u0E17\u0E32\u0E07\u0E14\u0E49\u0E32\u0E19\u0E2A\u0E39\u0E07",
    "\u53D6\u6D88": "\u0E22\u0E01\u0E40\u0E25\u0E34\u0E01",
    "\u5C55\u793A\u5468\u671F": "\u0E27\u0E07\u0E08\u0E23\u0E01\u0E32\u0E23\u0E41\u0E2A\u0E14\u0E07\u0E1C\u0E25",
    "\u91CD\u7F6E": "\u0E23\u0E35\u0E40\u0E0B\u0E47\u0E15",
    "\u786E\u8BA4": "\u0E22\u0E37\u0E19\u0E22\u0E31\u0E19",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "\u0E15\u0E49\u0E2D\u0E07\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E2B\u0E49\u0E32\u0E04\u0E23\u0E31\u0E49\u0E07",
    "\u4E3B\u56FE": "\u0E20\u0E32\u0E1E\u0E2B\u0E25\u0E31\u0E01",
    "\u526F\u56FE": "\u0E20\u0E32\u0E1E\u0E22\u0E48\u0E2D\u0E22",
    "\u65F6\u95F4": "\u0E40\u0E27\u0E25\u0E32",
    "\u5F00": "\u0E40\u0E1B\u0E34\u0E14",
    "\u9AD8": "\u0E2A\u0E39\u0E07",
    "\u4F4E": "\u0E15\u0E48\u0E33",
    "\u6536": "\u0E23\u0E31\u0E1A",
    "\u6DA8\u8DCC\u5E45": "\u0E01\u0E32\u0E23\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E43\u0E1A\u0E40\u0E2A\u0E19\u0E2D\u0E23\u0E32\u0E04\u0E32",
    "\u632F\u5E45": "\u0E41\u0E2D\u0E21\u0E1E\u0E25\u0E34\u0E08\u0E39\u0E14",
    "\u91CF": "\u0E1B\u0E23\u0E34\u0E21\u0E32\u0E13",
    "\u989D": "\u0E2B\u0E19\u0E49\u0E32\u0E1C\u0E32\u0E01",
    "\u6210\u4EA4": "\u0E17\u0E33\u0E02\u0E49\u0E2D\u0E15\u0E01\u0E25\u0E07",
    "\u7B14": "\u0E1B\u0E32\u0E01\u0E01\u0E32",
    "\u5747\u4EF7": "\u0E23\u0E32\u0E04\u0E32\u0E40\u0E09\u0E25\u0E35\u0E48\u0E22",
    "\u4E70\u5165": "\u0E0B\u0E37\u0E49\u0E2D",
    "\u4E70": "\u0E0B\u0E37\u0E49\u0E2D",
    "\u4E70\u6DA8": "\u0E0B\u0E37\u0E49\u0E2D",
    "\u4E70\u8DCC": "\u0E0B\u0E37\u0E49\u0E2D\u0E2B\u0E23\u0E37\u0E2D\u0E02\u0E32\u0E22",
    "\u4E70\u8D85\u6DA8": "\u0E0B\u0E37\u0E49\u0E2D\u0E40\u0E01\u0E34\u0E19\u0E23\u0E32\u0E04\u0E32",
    "\u4E70\u8D85\u8DCC": "\u0E0B\u0E37\u0E49\u0E2D\u0E02\u0E32\u0E22\u0E40\u0E01\u0E34\u0E19",
    "\u4EF7\u5DEE": "\u0E01\u0E32\u0E23\u0E41\u0E1E\u0E23\u0E48\u0E01\u0E23\u0E30\u0E08\u0E32\u0E22",
    "\u67E5\u770B\u660E\u7EC6": "\u0E14\u0E39\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14",
    "\u5356\u51FA": "\u0E02\u0E32\u0E22",
    "\u5356": "\u0E02\u0E32\u0E22",
    "\u6570\u91CF": "\u0E1B\u0E23\u0E34\u0E21\u0E32\u0E13",
    "\u4EF7\u683C": "\u0E23\u0E32\u0E04\u0E32",
    "\u624B\u7EED\u8D39": "\u0E04\u0E48\u0E32\u0E18\u0E23\u0E23\u0E21\u0E40\u0E19\u0E35\u0E22\u0E21\u0E01\u0E32\u0E23\u0E08\u0E31\u0E14\u0E01\u0E32\u0E23",
    "\u8BA2\u5355\u8BE6\u60C5": "\u0E23\u0E32\u0E22\u0E25\u0E30\u0E40\u0E2D\u0E35\u0E22\u0E14\u0E01\u0E32\u0E23\u0E2A\u0E31\u0E48\u0E07\u0E0B\u0E37\u0E49\u0E2D",
    "\u4EF7\u5DEE\u5E45\u5EA6": "\u0E01\u0E32\u0E23\u0E41\u0E1E\u0E23\u0E48\u0E01\u0E23\u0E30\u0E08\u0E32\u0E22",
    "\u59D4\u6258\u4EF7\u683C": "\u0E23\u0E32\u0E04\u0E32\u0E04\u0E2D\u0E21\u0E21\u0E34\u0E0A\u0E0A\u0E31\u0E48\u0E19",
    "\u7D2F\u8BA1\u6302\u5355": "\u0E04\u0E33\u0E2A\u0E31\u0E48\u0E07\u0E0B\u0E37\u0E49\u0E2D\u0E17\u0E35\u0E48\u0E23\u0E2D\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E2A\u0E30\u0E2A\u0E21"
  },
  "vi-VN": {
    "\u57FA\u672C\u7248": "Phi\xEAn b\u1EA3n c\u01A1 b\u1EA3n",
    "\u6DF1\u5EA6\u56FE": "B\u1EA3n \u0111\u1ED3 \u0111\u1ED9 s\xE2u",
    "\u66F4\u591A": "H\u01A1n",
    "1m": "1 \u0111i\u1EC3m",
    "1time": "chia s\u1EBB th\u1EDDi gian",
    "1s": "1 gi\xE2y",
    "3m": "3 \u0111i\u1EC3m",
    "5m": "5 \u0111i\u1EC3m",
    "15m": "15 \u0111i\u1EC3m",
    "30m": "30 \u0111i\u1EC3m",
    "1h": "1 gi\u1EDD",
    "2h": "2 gi\u1EDD",
    "4h": "4 ti\u1EBFng",
    "6h": "6 ti\u1EBFng",
    "8h": "8 gi\u1EDD",
    "12h": "12 gi\u1EDD",
    "1D": "1 ng\xE0y",
    "3D": "3 ng\xE0y",
    "5D": "5 ng\xE0y",
    "1W": "1 tu\u1EA7n",
    "1M": "Th\xE1ng M\u1ED9t",
    "3M": "B\u01B0\u1EDBc \u0111\u1EC1u",
    "6M": "Th\xE1ng s\xE1u",
    "1Y": "1 n\u0103m",
    "\u56FE\u8868\u8BBE\u7F6E": "C\xE0i \u0111\u1EB7t bi\u1EC3u \u0111\u1ED3",
    "\u6307\u6807\u8BBE\u7F6E": "C\xE0i \u0111\u1EB7t ch\u1EC9 b\xE1o",
    "\u65F6\u95F4\u5468\u671F": "Kho\u1EA3ng th\u1EDDi gian",
    "\u56FE\u8868\u9AD8\u5EA6": "chi\u1EC1u cao bi\u1EC3u \u0111\u1ED3",
    "\u504F\u4F4E": "\u1EDE ph\xEDa th\u1EA5p",
    "\u9ED8\u8BA4": "m\u1EB7c \u0111\u1ECBnh",
    "\u504F\u9AD8": "\u1EDE ph\xEDa cao",
    "\u53D6\u6D88": "H\u1EE7y b\u1ECF",
    "\u5C55\u793A\u5468\u671F": "Chu k\u1EF3 hi\u1EC3n th\u1ECB",
    "\u91CD\u7F6E": "c\xE0i l\u1EA1i",
    "\u786E\u8BA4": "x\xE1c nh\u1EADn",
    "\u5FC5\u987B\u9009\u62E9\u4E94\u4E2A\u65F6\u95F4": "Ph\u1EA3i ch\u1ECDn n\u0103m l\u1EA7n",
    "\u4E3B\u56FE": "H\xECnh \u1EA3nh ch\xEDnh",
    "\u526F\u56FE": "H\xECnh \u1EA3nh ph\u1EE5",
    "\u65F6\u95F4": "th\u1EDDi gian",
    "\u5F00": "m\u1EDF",
    "\u9AD8": "cao",
    "\u4F4E": "Th\u1EA5p",
    "\u6536": "nh\u1EADn \u0111\u01B0\u1EE3c",
    "\u6DA8\u8DCC\u5E45": "Thay \u0111\u1ED5i b\xE1o gi\xE1",
    "\u632F\u5E45": "bi\xEAn \u0111\u1ED9",
    "\u91CF": "S\u1ED1 l\u01B0\u1EE3ng",
    "\u989D": "Tr\xE1n",
    "\u6210\u4EA4": "l\xE0m cho m\u1ED9t th\u1ECFa thu\u1EADn",
    "\u7B14": "C\xE1i b\xFAt",
    "\u5747\u4EF7": "gi\xE1 trung b\xECnh",
    "\u4E70\u5165": "Mua",
    "\u4E70": "mua",
    "\u4E70\u6DA8": "mua l\xEAn",
    "\u4E70\u8DCC": "Mua ho\u1EB7c b\xE1n",
    "\u4E70\u8D85\u6DA8": "Mua qu\xE1 \u0111\u1EAFt",
    "\u4E70\u8D85\u8DCC": "Mua qu\xE1 b\xE1n",
    "\u4EF7\u5DEE": "l\xE2y lan",
    "\u67E5\u770B\u660E\u7EC6": "Xem chi ti\u1EBFt",
    "\u5356\u51FA": "b\xE1n",
    "\u5356": "B\xE1n",
    "\u6570\u91CF": "S\u1ED1 l\u01B0\u1EE3ng",
    "\u4EF7\u683C": "gi\xE1 ",
    "\u624B\u7EED\u8D39": "ph\xED x\u1EED l\xFD",
    "\u8BA2\u5355\u8BE6\u60C5": "chi ti\u1EBFt \u0111\u1EB7t h\xE0ng",
    "\u4EF7\u5DEE\u5E45\u5EA6": "l\xE2y lan",
    "\u59D4\u6258\u4EF7\u683C": "Gi\xE1 hoa h\u1ED3ng",
    "\u7D2F\u8BA1\u6302\u5355": "C\xE1c l\u1EC7nh ch\u1EDD t\xEDch l\u0169y"
  }
};
var timeMap = {
  "1time": "1m",
  "1s": "1s",
  "1m": "1m",
  "3m": "3m",
  "5m": "5m",
  "15m": "15m",
  "30m": "30m",
  "1h": "1h",
  "2h": "2h",
  "4h": "4h",
  "6h": "6h",
  "8h": "8h",
  "12h": "12h",
  "1D": "1d",
  "3D": "3d",
  "5D": "5d",
  "1W": "1w",
  "1M": "1M",
  "3M": "3M",
  "6M": "6M",
  "1Y": "1y"
};
var tradingviewTimeMap = {
  "1time": "1",
  "1s": "1S",
  "1m": "1",
  "3m": "3",
  "5m": "5",
  "15m": "15",
  "30m": "30",
  "1h": "60",
  "2h": "120",
  "4h": "240",
  "6h": "360",
  "8h": "480",
  "12h": "720",
  "1D": "1440",
  "3D": "4320",
  "5D": "7200",
  "1W": "10080",
  "1M": "43200",
  "3M": "129600",
  "6M": "259200",
  "1Y": "518400"
};
var TradingviewIndicatorType;
(function(TradingviewIndicatorType2) {
  TradingviewIndicatorType2["ChartProperties"] = "chartProperties";
  TradingviewIndicatorType2["InsertIndicator"] = "insertIndicator";
})(TradingviewIndicatorType || (TradingviewIndicatorType = {}));
var shareTimeList = [{
  unit: "m",
  value: 1
}, {
  unit: "m",
  value: 5
}, {
  unit: "m",
  value: 15
}, {
  unit: "m",
  value: 30
}, {
  unit: "h",
  value: 1
}, {
  unit: "h",
  value: 2
}, {
  unit: "h",
  value: 4
}, {
  unit: "D",
  value: 1
}, {
  unit: "W",
  value: 1
}, {
  unit: "M",
  value: 1
}];
var LanguageMapToChartMap = {
  "zh-CN": "zh",
  "zh-HK": "zh_TW",
  "en-US": "en",
  "en-ID": "en",
  "hi-IN": "en",
  "pt-BR": "pt",
  "ta-IN": "en",
  "ja-JP": "ja",
  "ko-KR": "ko",
  "th-TH": "th_TH",
  "zh-TW": "zh_TW",
  "fr-FR": "fr",
  "de-DE": "de_DE",
  "it-IT": "it",
  "es-ES": "es",
  "vi-VN": "vi"
};
var ThemeChartMap = {
  light: "Light",
  dark: "Dark"
};
var WSThrottleTypeEnum;
(function(WSThrottleTypeEnum2) {
  WSThrottleTypeEnum2[WSThrottleTypeEnum2["none"] = 0] = "none";
  WSThrottleTypeEnum2[WSThrottleTypeEnum2["cover"] = 1] = "cover";
  WSThrottleTypeEnum2[WSThrottleTypeEnum2["increment"] = 2] = "increment";
})(WSThrottleTypeEnum || (WSThrottleTypeEnum = {}));
var ThemeEnum;
(function(ThemeEnum2) {
  ThemeEnum2["light"] = "light";
  ThemeEnum2["dark"] = "dark";
})(ThemeEnum || (ThemeEnum = {}));
var bollKList = [{
  name: "UP",
  value: "upper"
}, {
  name: "MB",
  value: "mid"
}, {
  name: "DN",
  value: "lower"
}];
var macdKList = [{
  name: "dea",
  value: "dea"
}, {
  name: "dif",
  value: "dif"
}, {
  name: "macd",
  value: "macd"
}];
var kdjKList = [{
  name: "K",
  value: "k"
}, {
  name: "D",
  value: "d"
}, {
  name: "J",
  value: "j"
}];

// node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.49/node_modules/@nbit/chart-utils/es/type/index.js
var DeptChartSpecieEnum;
(function(DeptChartSpecieEnum2) {
  DeptChartSpecieEnum2["Dept"] = "dept";
  DeptChartSpecieEnum2["DeptCurrent"] = "deptCurrent";
})(DeptChartSpecieEnum || (DeptChartSpecieEnum = {}));
var TimeSharingType;
(function(TimeSharingType2) {
  TimeSharingType2["Min"] = "m";
  TimeSharingType2["Hour"] = "h";
  TimeSharingType2["Day"] = "D";
  TimeSharingType2["Week"] = "W";
  TimeSharingType2["Mon"] = "M";
  TimeSharingType2["Second"] = "s";
})(TimeSharingType || (TimeSharingType = {}));
var KLineChartType;
(function(KLineChartType2) {
  KLineChartType2["Quote"] = "quote";
  KLineChartType2["ContractFunding"] = "contractFunding";
  KLineChartType2["Futures"] = "futures";
  KLineChartType2["Ternary"] = "ternary-option";
})(KLineChartType || (KLineChartType = {}));

// node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.49/node_modules/@nbit/chart-utils/es/util/index.js
var import_dayjs = __toESM(require_dayjs_min());
var sortMarketChartData = function sortMarketChartData2(data) {
  var sortData = data.sort(function(x, y) {
    return x.time - y.time;
  });
  var timeList = [];
  var resultList = [];
  sortData.forEach(function(item) {
    if (timeList.indexOf(item.time) === -1) {
      timeList.push(item.time);
      resultList.push(item);
    }
  });
  return resultList;
};
var getCurrentQuoteApiCoin = function getCurrentQuoteApiCoin2(sellSymbol, buySymbol) {
  return "".concat(sellSymbol, "_").concat(buySymbol).toLowerCase();
};
var getCurrentQuoteShowCoin = function getCurrentQuoteShowCoin2(sellSymbol, buySymbol) {
  return "".concat(sellSymbol, "/").concat(buySymbol);
};
var fullscreen = function fullscreen2(fullscreenRef, isFullScreen, setIsFullScreen) {
  var tv = fullscreenRef.current;
  var _document = document;
  if (!isFullScreen) {
    if (tv !== null && tv !== void 0 && tv.requestFullscreen) {
      tv.requestFullscreen();
    } else if (tv !== null && tv !== void 0 && tv.webkitRequestFullScreen) {
      tv === null || tv === void 0 ? void 0 : tv.webkitRequestFullScreen();
    } else if (tv !== null && tv !== void 0 && tv.mozRequestFullScreen) {
      tv.mozRequestFullScreen();
    } else if (tv !== null && tv !== void 0 && tv.msRequestFullscreen) {
      tv.msRequestFullscreen();
    }
  } else {
    if (_document.exitFullscreen) {
      _document.exitFullscreen();
    } else if (_document.msExitFullscreen) {
      _document.msExitFullscreen();
    } else if (_document.mozCancelFullScreen) {
      _document.mozCancelFullScreen();
    } else if (_document.webkitExitFullscreen) {
      _document.webkitExitFullscreen();
    }
  }
  setIsFullScreen(!isFullScreen);
};
var checkIsUp = function checkIsUp2(value) {
  return (value === null || value === void 0 ? void 0 : value.close) > (value === null || value === void 0 ? void 0 : value.open);
};
var showFormatTime = function showFormatTime2(item, unit) {
  if (unit === TimeSharingType.Mon) {
    return (0, import_dayjs.default)(item).format("YYYY-MM");
  }
  if (unit === TimeSharingType.Week || unit === TimeSharingType.Day) {
    return (0, import_dayjs.default)(item).format("MM-DD");
  }
  if (unit === TimeSharingType.Second) {
    return (0, import_dayjs.default)(item).format("HH:mm:ss");
  }
  return (0, import_dayjs.default)(item).format("HH:mm");
};

// node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.49/node_modules/@nbit/chart-utils/es/util/indicator.js
var import_dayjs2 = __toESM(require_dayjs_min());
var import_isBetween = __toESM(require_isBetween());
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
import_dayjs2.default.extend(import_isBetween.default);
var calculateSMA = function calculateSMA2(data, count, price, priceOffset) {
  var result = [];
  var avg = function avg2(data2) {
    var sum = 0;
    for (var i2 = 0; i2 < data2.length; i2 += 1) {
      var _data$i;
      sum += (_data$i = data2[i2]) === null || _data$i === void 0 ? void 0 : _data$i[price];
    }
    return sum / data2.length;
  };
  for (var i = count - 1, len = data.length; i < len; i += 1) {
    var val = avg(data.slice(i - count + 1, i + 1));
    if (i - count + 1 === 0) {
      for (var j = 0; j < count; j += 1) {
        var _data$j;
        result.push({
          time: (_data$j = data[j]) === null || _data$j === void 0 ? void 0 : _data$j.time,
          value: Number(val.toFixed(priceOffset))
        });
      }
    } else {
      var _data$i2;
      result.push({
        time: (_data$i2 = data[i]) === null || _data$i2 === void 0 ? void 0 : _data$i2.time,
        value: Number(val.toFixed(priceOffset))
      });
    }
  }
  return result;
};
var calculateEMA = function calculateEMA2(ema, price, period) {
  return (2 * price + (period - 1) * ema) / (period + 1);
};
var calculateMACD = function calculateMACD2(data, fast, slow, signal, priceOffset) {
  var newData = [];
  data.forEach(function(item, index) {
    var emaFast = 0;
    var emaSlow = 0;
    var dea = 0;
    var dif = 0;
    if (index < fast - 1) {
      emaFast = 0;
    } else {
      var _newData;
      emaFast = calculateEMA(((_newData = newData[index - 1]) === null || _newData === void 0 ? void 0 : _newData.emaFast) || 0, item.close, fast);
    }
    if (index < slow - 1) {
      emaSlow = 0;
    } else {
      var _newData2;
      emaSlow = calculateEMA(((_newData2 = newData[index - 1]) === null || _newData2 === void 0 ? void 0 : _newData2.emaSlow) || 0, item.close, slow);
    }
    dif = emaFast - emaSlow;
    if (index < signal - 1) {
      dea = 0;
    } else {
      var _newData3;
      dea = calculateEMA(((_newData3 = newData[index - 1]) === null || _newData3 === void 0 ? void 0 : _newData3.dea) || 0, dif, signal);
    }
    newData.push({
      emaFast: Number(emaFast.toFixed(priceOffset)),
      emaSlow: Number(emaSlow.toFixed(priceOffset)),
      dif: Number(dif.toFixed(priceOffset)),
      dea: Number(dea.toFixed(priceOffset)),
      value: Number(((dif - dea) * 2).toFixed(priceOffset)),
      time: item.time
    });
  });
  return newData;
};
var updateTimeOfData = function updateTimeOfData2(value, type, kLineChartData) {
  var timeList = kLineChartData.map(function(item, index) {
    return {
      index,
      time: (0, import_dayjs2.default)(item.time).format("YYYY-MM-DD HH:mm")
    };
  });
  var newData = [];
  if (type === TimeSharingType.Min) {
    var i = 0;
    while (i < timeList.length) {
      var min = Number(timeList[i].time.split(" ")[1].split(":")[1]);
      if (min === 0 || min % value === 0) {
        newData.push(_objectSpread({}, kLineChartData[i]));
        i += 1;
      } else {
        var remainder = min % value;
        var tempIndex = remainder;
        var tempObj = {};
        while (tempIndex <= value && i < timeList.length) {
          if (!tempObj.low) {
            tempObj.low = kLineChartData[i].low;
          } else {
            if (kLineChartData[i].low < tempObj.low) {
              tempObj.low = kLineChartData[i].low;
            }
          }
          if (!tempObj.high) {
            tempObj.high = kLineChartData[i].high;
          } else {
            if (kLineChartData[i].high > tempObj.high) {
              tempObj.high = kLineChartData[i].high;
            }
          }
          if (tempIndex === remainder) {
            tempObj.open = kLineChartData[i].open;
          }
          tempObj.close = kLineChartData[i].close;
          tempIndex += 1;
          i += 1;
          if (i === timeList.length) {
            tempObj.time = kLineChartData[i - 1].time + 1e3 * 60 * (value - tempIndex + 1);
          } else {
            tempObj.time = kLineChartData[i - 1].time;
          }
        }
        newData.push(_objectSpread({}, tempObj));
      }
    }
  }
  if (type === TimeSharingType.Hour) {
    var _i = 0;
    while (_i < timeList.length) {
      var hour = Number(timeList[_i].time.split(" ")[1].split(":")[0]);
      var _min = Number(timeList[_i].time.split(" ")[1].split(":")[1]);
      if (_min === 0 && hour % value === 0) {
        newData.push(_objectSpread({}, kLineChartData[_i]));
        _i += 1;
      } else {
        var _remainder = hour % value;
        var _tempIndex2 = _remainder * 60 + _min;
        var _tempIndex = _tempIndex2;
        var _tempObj = {};
        while (_tempIndex2 <= value * 60 && _i < timeList.length) {
          if (!_tempObj.low) {
            _tempObj.low = kLineChartData[_i].low;
          } else {
            if (kLineChartData[_i].low < _tempObj.low) {
              _tempObj.low = kLineChartData[_i].low;
            }
          }
          if (!_tempObj.high) {
            _tempObj.high = kLineChartData[_i].high;
          } else {
            if (kLineChartData[_i].high > _tempObj.high) {
              _tempObj.high = kLineChartData[_i].high;
            }
          }
          if (_tempIndex2 === _tempIndex) {
            _tempObj.open = kLineChartData[_i].open;
          }
          _tempObj.close = kLineChartData[_i].close;
          _tempIndex2 += 1;
          _i += 1;
          if (_i === timeList.length) {
            _tempObj.time = kLineChartData[_i - 1].time + 1e3 * 60 * (value * 60 - _tempIndex2 + 1);
          } else {
            _tempObj.time = kLineChartData[_i - 1].time;
          }
        }
        newData.push(_objectSpread({}, _tempObj));
      }
    }
  }
  if (type === TimeSharingType.Week) {
    var _i2 = 0;
    while (_i2 < timeList.length) {
      var date = timeList[_i2].time.split(" ")[0];
      var dayOfWeek = (0, import_dayjs2.default)(kLineChartData[_i2].time).day();
      var _tempIndex3 = _i2;
      var newDate = dayOfWeek === 7 ? timeList[_i2].time.split(" ")[0] : (0, import_dayjs2.default)(timeList[_i2].time.split(" ")[0]).add(7 - dayOfWeek, "day").format("YYYY-MM-DD");
      var _tempObj2 = {};
      var tempDate = date;
      while ((0, import_dayjs2.default)(tempDate).isBetween(date, newDate, null, "[]") && _i2 < timeList.length) {
        if (!_tempObj2.low) {
          _tempObj2.low = kLineChartData[_i2].low;
        } else {
          if (kLineChartData[_i2].low < _tempObj2.low) {
            _tempObj2.low = kLineChartData[_i2].low;
          }
        }
        if (!_tempObj2.high) {
          _tempObj2.high = kLineChartData[_i2].high;
        } else {
          if (kLineChartData[_i2].high > _tempObj2.high) {
            _tempObj2.high = kLineChartData[_i2].high;
          }
        }
        if (_tempIndex3 === _i2) {
          _tempObj2.open = kLineChartData[_i2].open;
        }
        _tempObj2.close = kLineChartData[_i2].close;
        _i2 += 1;
        _tempObj2.time = (0, import_dayjs2.default)(newDate).valueOf();
        if (_i2 !== timeList.length) {
          tempDate = timeList[_i2].time.split(" ")[0];
        }
      }
      newData.push(_objectSpread({}, _tempObj2));
    }
  }
  if (type === TimeSharingType.Mon) {
    var _i3 = 0;
    while (_i3 < timeList.length) {
      var year = Number(timeList[_i3].time.split(" ")[0].split("-")[0]);
      var mon = Number(timeList[_i3].time.split(" ")[0].split("-")[1]);
      var _remainder2 = mon % value;
      var tempMon = mon;
      var tempYear = year;
      var _tempIndex4 = _i3;
      var _tempObj3 = {};
      while (tempMon === mon && tempYear === year && _i3 < timeList.length) {
        if (!_tempObj3.low) {
          _tempObj3.low = kLineChartData[_i3].low;
        } else {
          if (kLineChartData[_i3].low < _tempObj3.low) {
            _tempObj3.low = kLineChartData[_i3].low;
          }
        }
        if (!_tempObj3.high) {
          _tempObj3.high = kLineChartData[_i3].high;
        } else {
          if (kLineChartData[_i3].high > _tempObj3.high) {
            _tempObj3.high = kLineChartData[_i3].high;
          }
        }
        if (_tempIndex4 === _i3) {
          _tempObj3.open = kLineChartData[_i3].open;
        }
        _tempObj3.close = kLineChartData[_i3].close;
        _i3 += 1;
        if (Number(timeList[_i3 === timeList.length ? _i3 - 1 : _i3].time.split(" ")[0].split("-")[0]) !== tempYear || Number(timeList[_i3 === timeList.length ? _i3 - 1 : _i3].time.split(" ")[0].split("-")[1]) !== tempMon) {
          tempYear = Number(timeList[_i3 === timeList.length ? _i3 - 1 : _i3].time.split(" ")[0].split("-")[0]);
          tempMon = Number(timeList[_i3 === timeList.length ? _i3 - 1 : _i3].time.split(" ")[0].split("-")[1]);
        }
        if (_i3 === timeList.length) {
          _tempObj3.time = (0, import_dayjs2.default)("".concat(tempMon + value - _remainder2 > 12 ? tempYear + 1 : tempYear, "-").concat(tempMon + value - _remainder2 > 12 ? tempMon + value - _remainder2 - 12 : tempMon + value - _remainder2, "-1")).valueOf();
        } else {
          _tempObj3.time = kLineChartData[_i3 - 1].time;
        }
      }
      newData.push(_objectSpread({}, _tempObj3));
    }
  }
  return newData;
};
var calBoll = function calBoll2(data) {
  var calcParams = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [20, 2];
  var priceOffset = arguments.length > 2 ? arguments[2] : void 0;
  var BOLL_N = calcParams[0];
  var BOLL_P = calcParams[1];
  var close;
  var mid;
  var upper;
  var lower;
  var i;
  var j;
  var item = [];
  var val;
  var std;
  var sumTotal = 0;
  for (i = 0; i < data.length; i += 1) {
    var _data$i3;
    close = (_data$i3 = data[i]) === null || _data$i3 === void 0 ? void 0 : _data$i3.close;
    sumTotal += close;
    if (i >= BOLL_N - 1) {
      var _data;
      mid = sumTotal / BOLL_N;
      std = 0;
      for (j = i - (BOLL_N - 1); j <= i; j += 1) {
        var _data$j2;
        val = ((_data$j2 = data[j]) === null || _data$j2 === void 0 ? void 0 : _data$j2.close) - mid;
        std += val * val;
      }
      std = Math.sqrt(std / BOLL_N);
      upper = mid + BOLL_P * std;
      lower = mid - BOLL_P * std;
      sumTotal -= (_data = data[i - (BOLL_N - 1)]) === null || _data === void 0 ? void 0 : _data.close;
    } else {
      mid = 0;
      upper = 0;
      lower = 0;
    }
    if (mid && upper && lower) {
      var _mid, _upper, _lower, _data$i4;
      item.push({
        mid: Number((_mid = mid) === null || _mid === void 0 ? void 0 : _mid.toFixed(priceOffset)),
        upper: Number((_upper = upper) === null || _upper === void 0 ? void 0 : _upper.toFixed(priceOffset)),
        lower: Number((_lower = lower) === null || _lower === void 0 ? void 0 : _lower.toFixed(priceOffset)),
        time: (_data$i4 = data[i]) === null || _data$i4 === void 0 ? void 0 : _data$i4.time
      });
    }
  }
  return item;
};
function calKdj(data) {
  var calcParams = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [9, 3, 3];
  var priceOffset = arguments.length > 2 ? arguments[2] : void 0;
  var KDJ_N = calcParams[0];
  var KDJ_M1 = calcParams[1];
  var KDJ_M2 = calcParams[2];
  var close;
  var llvlow = Infinity;
  var llvhigh = -Infinity;
  var rsv;
  var a = 0;
  var b = 0;
  var e;
  var i;
  var j;
  var item = [];
  for (i = 0; i < data.length; i += 1) {
    var _data$i5, _a, _b, _e, _data$i6;
    close = (_data$i5 = data[i]) === null || _data$i5 === void 0 ? void 0 : _data$i5.close;
    llvlow = Infinity;
    llvhigh = -Infinity;
    if (i < KDJ_N) {
      j = 0;
    } else {
      j = i - KDJ_N + 1;
    }
    for (; j <= i; j += 1) {
      var _data$j3, _data$j5;
      if (llvlow > ((_data$j3 = data[j]) === null || _data$j3 === void 0 ? void 0 : _data$j3.low)) {
        var _data$j4;
        llvlow = (_data$j4 = data[j]) === null || _data$j4 === void 0 ? void 0 : _data$j4.low;
      }
      if (llvhigh < ((_data$j5 = data[j]) === null || _data$j5 === void 0 ? void 0 : _data$j5.high)) {
        var _data$j6;
        llvhigh = (_data$j6 = data[j]) === null || _data$j6 === void 0 ? void 0 : _data$j6.high;
      }
    }
    rsv = (close - llvlow) / (llvhigh - llvlow) * 100;
    if (isNaN(rsv) || rsv === -Infinity || rsv === Infinity)
      rsv = 0;
    if (i < KDJ_N) {
      a = (rsv + a * i) / (i + 1);
      b = (a + b * i) / (i + 1);
    } else {
      a = (rsv + (KDJ_M1 - 1) * a) / KDJ_M1;
      b = (a + (KDJ_M2 - 1) * b) / KDJ_M2;
    }
    e = 3 * a - 2 * b;
    item.push({
      k: Number((_a = a) === null || _a === void 0 ? void 0 : _a.toFixed(priceOffset)),
      d: Number((_b = b) === null || _b === void 0 ? void 0 : _b.toFixed(priceOffset)),
      j: Number((_e = e) === null || _e === void 0 ? void 0 : _e.toFixed(priceOffset)),
      time: (_data$i6 = data[i]) === null || _data$i6 === void 0 ? void 0 : _data$i6.time
    });
  }
  return item;
}
var EMA = function EMA2(X, YPre, N) {
  YPre = YPre || 0;
  return (2 * X + (N - 1) * YPre) / (N + 1);
};
var MAX = function MAX2(a, b) {
  return +a > +b ? +a : +b;
};
var MIN = function MIN2(a, b) {
  return +a < +b ? +a : +b;
};
var ABS = function ABS2(a) {
  return Math.abs(+a);
};
var SMA = function SMA2(x, n, m, y) {
  return (m * x + (n - m) * y) / n;
};
function calRsi(data) {
  var calcParams = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [6, 12, 24];
  var priceOffset = arguments.length > 2 ? arguments[2] : void 0;
  var RSI_N1 = calcParams[0];
  var RSI_N2 = calcParams[1];
  var RSI_N3 = calcParams[2];
  var close;
  var lc;
  var r;
  var r1;
  var r2;
  var s;
  var s1;
  var s2;
  var i;
  var i1;
  var i2;
  var j;
  var item = [];
  for (j = 0; j < data.length; j += 1) {
    var _data$j7, _r, _s, _i4, _data$j8;
    close = (_data$j7 = data[j]) === null || _data$j7 === void 0 ? void 0 : _data$j7.close;
    if (j === 0) {
      lc = close;
      r1 = s1 = i1 = 0;
      r2 = s2 = i2 = 0;
    } else {
      lc = data[j - 1].close;
      r1 = SMA(MAX(close - lc, 0), RSI_N1, 1, r1);
      r2 = SMA(ABS(close - lc), RSI_N1, 1, r2);
      s1 = SMA(MAX(close - lc, 0), RSI_N2, 1, s1);
      s2 = SMA(ABS(close - lc), RSI_N2, 1, s2);
      i1 = SMA(MAX(close - lc, 0), RSI_N3, 1, i1);
      i2 = SMA(ABS(close - lc), RSI_N3, 1, i2);
    }
    r = r1 / r2 * 100 || 0;
    s = s1 / s2 * 100 || 0;
    i = i1 / i2 * 100 || 0;
    item.push({
      r: Number((_r = r) === null || _r === void 0 ? void 0 : _r.toFixed(priceOffset)),
      s: Number((_s = s) === null || _s === void 0 ? void 0 : _s.toFixed(priceOffset)),
      i: Number((_i4 = i) === null || _i4 === void 0 ? void 0 : _i4.toFixed(priceOffset)),
      time: (_data$j8 = data[j]) === null || _data$j8 === void 0 ? void 0 : _data$j8.time
    });
  }
  return item;
}
function calcHnLn(dataList) {
  var hn = Number.MIN_SAFE_INTEGER;
  var ln = Number.MAX_SAFE_INTEGER;
  dataList.forEach(function(data) {
    hn = Math.max(data.high, hn);
    ln = Math.min(data.low, ln);
  });
  return {
    hn,
    ln
  };
}
function calWr(dataList, options) {
  var plots = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [{
    key: "wr1",
    title: "wr1"
  }, {
    key: "wr2",
    title: "wr2"
  }];
  var priceOffset = arguments.length > 3 ? arguments[3] : void 0;
  return dataList.map(function(kLineData, i) {
    var wr = {
      wr1: 0,
      wr2: 0,
      time: kLineData === null || kLineData === void 0 ? void 0 : kLineData.time
    };
    var close = kLineData === null || kLineData === void 0 ? void 0 : kLineData.close;
    options.forEach(function(param, index) {
      var p = param - 1;
      if (i >= p) {
        var hln = calcHnLn(dataList === null || dataList === void 0 ? void 0 : dataList.slice(i - p, i + 1));
        var hn = hln.hn;
        var ln = hln.ln;
        var hnSubLn = hn - ln;
        wr[plots[index].key] = hnSubLn === 0 ? 0 : Number(((hn - close) / hnSubLn * 100).toFixed(priceOffset));
      }
    });
    return wr;
  });
}
var calcChg = function calcChg2(value, priceOffset) {
  if (!Number(value === null || value === void 0 ? void 0 : value.open)) {
    var temp = 0;
    return "".concat(temp.toFixed(2), "%");
  }
  var difference = Number(value === null || value === void 0 ? void 0 : value.close) - Number(value === null || value === void 0 ? void 0 : value.open);
  var result = difference / Number(value === null || value === void 0 ? void 0 : value.open) * 100;
  return "".concat(result === null || result === void 0 ? void 0 : result.toFixed(2), "%");
};
var calcAmp = function calcAmp2(value, priceOffset) {
  if (!Number(value === null || value === void 0 ? void 0 : value.low)) {
    var temp = 0;
    return "".concat(temp.toFixed(2), "%");
  }
  var difference = Number(value === null || value === void 0 ? void 0 : value.high) - Number(value === null || value === void 0 ? void 0 : value.low);
  var result = difference / Number(value === null || value === void 0 ? void 0 : value.low) * 100;
  return "".concat(result === null || result === void 0 ? void 0 : result.toFixed(2), "%");
};

// node_modules/.pnpm/@nbit+chart-utils@1.0.0-beta.49/node_modules/@nbit/chart-utils/es/util/theme.js
var getColor = function getColor2(color) {
  return getComputedStyle(document.body).getPropertyValue(color).replace(/(^\s*)|(\s*$)/g, "");
};
var getTheme = function getTheme2() {
  var bgColor = getColor("--bg_color");
  var textColor = getColor("--text_color_03");
  var brandColor = getColor("--brand_color");
  var upColor = getColor("--buy_up_color");
  var downColor = getColor("--sell_down_color");
  var upLightColor = getColor("--buy_up_color_hover");
  var downLightColor = getColor("--sell_down_color_hover");
  var upSpecialColor02 = getColor("--buy_up_color_special_02");
  var downSpecialColor02 = getColor("--sell_down_color_special_02");
  var cardBgColor = getColor("--card_bg_color_01");
  var cardBgColor02 = getColor("--card_bg_color_02");
  var cardBgColor03 = getColor("--card_bg_color_03");
  var textColor01 = getColor("--text_color_01");
  var textColor02 = getColor("--text_color_02");
  return {
    bgColor,
    textColor,
    brandColor,
    upColor,
    downColor,
    upLightColor,
    downLightColor,
    upSpecialColor02,
    downSpecialColor02,
    cardBgColor,
    cardBgColor03,
    textColor01,
    cardBgColor02,
    textColor02
  };
};
export {
  ABS,
  DeptChartSpecieEnum,
  EMA,
  KLineChartType,
  LanguageMapToChartMap,
  MAX,
  MIN,
  SMA,
  ThemeChartMap,
  ThemeEnum,
  TimeSharingType,
  TradingviewIndicatorType,
  WSThrottleTypeEnum,
  bollKList,
  calBoll,
  calKdj,
  calRsi,
  calWr,
  calcAmp,
  calcChg,
  calcHnLn,
  calculateEMA,
  calculateMACD,
  calculateSMA,
  checkIsUp,
  fullscreen,
  getCurrentQuoteApiCoin,
  getCurrentQuoteShowCoin,
  getTheme,
  kdjKList,
  macdKList,
  shareTimeList,
  showFormatTime,
  sortMarketChartData,
  timeLocaleLanguageMap,
  timeMap,
  tradingviewTimeMap,
  updateTimeOfData
};
//# sourceMappingURL=@nbit_chart-utils.js.map
